@using ResourceEntity.Models
@{
	ViewData["Title"] = "Home Page";
	var calendarData = ViewBag.Interviews as List<Interview>;

}
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>

@model ResourceMNG.Models.ChartViewModel

<div class=" text-center">
	<div class="row">
		<div class="col-12 col-sm-6 mb-3">
			<div class="card" style="min-height: 300px;">
				<canvas id="barChart"></canvas>
			</div>
		</div>
		<div class="col-12 col-sm-3 mb-3">
			<div class="card" style="min-height: 300px;">
				<canvas id="pieChart"></canvas>
			</div>
		</div>
		<div class="col-12 col-sm-3 mb-3">
			<div class="card" style="min-height: 300px;">
				<canvas id="doughnutChart"></canvas>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-12 col-sm-6 mb-3">
			<div class="card" style="min-height: 500px;">
				<h4 style="padding-top:5px">Lịch phỏng vấn</h4>
				<div class="table-responsive" style="max-height: 470px; overflow-y: auto;">
				<table id="table-applicant" class="table table-striped mb-0" style="width:100%">
					<thead>
						<tr>
							<th class="align-middle" style="display:none">ID</th>
							<th class="align-middle">Ứng cử viên</th>
							<th class="align-middle">Công việc</th>
							<th class="align-middle">Ngày bắt đầu<br /> phỏng vấn </th>

						</tr>
					</thead>
					<tbody>

							@foreach (var interview in ViewBag.interviewsByWeek)
						{
							<tr>
								<td style="display:none">
									@interview.InterviewId
								</td>

								<td>
									@(interview.Applicant != null ? interview.Applicant.ApplicantName : "N/A")
								</td>
							
								<td>
									@(interview.Applicant.Vacancy != null ? interview.Applicant.Vacancy.VacancyJobTitle : "N/A")
								</td>
								<td>

									@(interview.InterviewSd !=null ? interview.InterviewSd.ToString("yyyy/MM/dd hh:mm") : "N:A")
								</td>
							</tr>
						}

					</tbody>
				</table>
				</div>
			</div>
		</div>
		<div class="col-12 col-sm-6 mb-3">
			<div class="card">
				<div class="card-body">
					<div id='calendar'></div>
				</div>
			</div>
		</div>
	</div>
</div>

@* //modal *@
<div class="modal" id="schedule-edit" style="background-color:rgba(0, 0, 0, 0.5);">
	<div class="modal-dialog">
		<div class="modal-content">
			<!-- Modal Header -->
			<div class="modal-body">
				<div class="card card-header text-center ">
					<h4 class="modal-title">Thông tin buổi phỏng vấn</h4>
				</div>

				<!-- Modal body -->
				<div class="modal-body">
					<div class="table-responsive">
						<table class="table">
							<tbody>
								<tr>
									<th scope="row">Ứng cử viên:</th>
									<td></td>

								</tr>
								<tr>
									<th scope="row">Mô tả cuộc phỏng vấn:</th>
									<td> </td>

								</tr>
								<tr>
									<th scope="row">Địa chỉ phỏng vấn:</th>
									<td></td>

								</tr>
							</tbody>
						</table>
					</div>
				</div>
				<!-- Modal footer -->
				<div class="text-center">
					<button type="button" class="btn btn-danger" onclick="closeModal()">Đóng</button>
				</div>
			</div>
		</div>
	</div>
	</div>
@section Scripts {
	<script>

		var ctx = document.getElementById('barChart').getContext('2d');

		// Dữ liệu về số lượng ứng viên và kết quả phỏng vấn
		var vacancies = ['@Html.Raw(string.Join("','", Model.Vacancies))'];
		var applicants = ['@Html.Raw(string.Join("','", Model.Applicants))'];
		var interviewResults = ['@Html.Raw(string.Join("','", Model.InterviewResults))'];

		var departmentLabels = ['@Html.Raw(string.Join("','", ViewBag.departmentLabels))'];
		var employeeCounts = ['@Html.Raw(string.Join("','", ViewBag.employeeCounts))'];

		// Tạo biểu đồ cột dọc
		var barChart = new Chart(ctx, {
			type: 'bar',
			data: {
				labels: vacancies,
				datasets: [
					{
						label: 'Số ứng viên',
						data: applicants,
						backgroundColor: 'rgba(54, 162, 235, 0.5)', // Màu nền cho cột
						borderColor: 'rgba(54, 162, 235, 1)', // Màu viền cho cột
						borderWidth: 1
					},
					{
						label: 'Đạt phỏng vấn',
						data: interviewResults,
						backgroundColor: 'rgba(255, 99, 132, 0.5)',
						borderColor: 'rgba(255, 99, 132, 1)',
						borderWidth: 1
					}
				]
			},
			options: {
				scales: {
					y: {
						beginAtZero: true // Bắt đầu trục y từ 0
					}
				}
			}
		});

		// Lấy tham chiếu đến phần tử canvas
		var ctx = document.getElementById('pieChart').getContext('2d');

		// Dữ liệu về số lượng nam và nữ
		var data = {
			labels: ['Nam', 'Nữ'],
			datasets: [{
				data: [@ViewBag.GenderMale, @ViewBag.GenderFeMale], // Số lượng nam và nữ tương ứng
				backgroundColor: ['#4BC0C0', '#FF9F40'], // Màu sắc cho các phần tử trong biểu đồ
			}]
		};

		// Tạo biểu đồ tròn
		var pieChart = new Chart(ctx, {
			type: 'pie',
			data: data,
			options: {} // Có thể tùy chỉnh các tuỳ chọn khác nếu cần
		});

		// Lấy tham chiếu đến phần tử canvas
		var ctx = document.getElementById('doughnutChart').getContext('2d');

		// Dữ liệu về số lượng nam và nữ
		var data = {
			labels: departmentLabels,
			datasets: [{
				data: employeeCounts, // Số lượng nam và nữ tương ứng
			}]
		};

		// Tạo biểu đồ tròn
		var doughnutChart = new Chart(ctx, {
			type: 'doughnut',
			data: data,
			options: {} // Có thể tùy chỉnh các tuỳ chọn khác nếu cần
		});
	</script>
	<script>
		var modal = document.getElementById("schedule-edit");
		function closeModal() {
			modal.style.display = "none";
		}
		window.addEventListener("click", function (event) {
			if (event.target === modal) {
				modal.style.display = "none";
			}
		});
		document.addEventListener('DOMContentLoaded', function () {
			var calendarEl = document.getElementById('calendar');
			var calendar = new FullCalendar.Calendar(calendarEl, {
				eventClick: function (event) {
					modal.style.display = "block";
					var IAddress = event.event.extendedProps.interviewAddress;
					var IName = event.event.extendedProps.interviewApplicant;
					var IDesc = event.event.extendedProps.interviewDesc;
					var modalTable = document.querySelector(".modal-body .table");
					modalTable.querySelector("tr:nth-child(1) td").textContent = IName;
					modalTable.querySelector("tr:nth-child(2) td").textContent = IDesc;
					modalTable.querySelector("tr:nth-child(3) td").textContent = IAddress;
				},
				initialView: 'dayGridMonth',
				headerToolbar: {
					start: 'title',
					center: '',
					end: 'today prev,next'
				},
				dayMaxEvents: true,
				events: [
		@foreach (var cld in calendarData)
		{
			@Html.Raw('{')
			@Html.Raw("title:'" + @cld.InterviewDescription + "',")
			@Html.Raw("start:'" + @cld.InterviewSd.Value.ToString("yyyy-MM-dd hh:mm") +"',")
			@Html.Raw("interviewId:'" + @cld.InterviewId +"',")
			@Html.Raw("interviewAddress:'" + @cld.InterviewAddress +"',")
			@Html.Raw("interviewApplicant:'" + @cld.Applicant.ApplicantName +"',")
			@Html.Raw("interviewDesc:'" + @cld.InterviewDescription +"',")
			@Html.Raw("},")
		}
														]
			},);
			calendar.render();
		});

	</script>
}




